let allAlerts = [];

// Load alerts from JSON
fetch("alerts.json")
  .then(res => res.json())
  .then(alerts => {
    allAlerts = alerts;
    renderAlerts(allAlerts);
    renderMap(allAlerts);
  })
  .catch(err => console.error("Error loading alerts:", err));

// Render alert cards
function renderAlerts(alerts) {
  const container = document.getElementById("alertContainer");
  container.innerHTML = "";
  if (alerts.length === 0) {
    container.innerHTML = "<p>No alerts found.</p>";
    return;
  }
  alerts.forEach(a => {
    const div = document.createElement("div");
    div.className = "card";
    div.innerHTML = `<h3>${a.location}</h3><p>Risk: <strong>${a.risk}</strong> (${a.prob}%)</p>`;
    container.appendChild(div);
  });
}

// Render map with markers
function renderMap(alerts) {
  const map = L.map("map").setView([9.6, 6.56], 6);
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: "&copy; OpenStreetMap"
  }).addTo(map);

  alerts.forEach(a => {
    L.marker([a.lat, a.lng])
      .addTo(map)
      .bindPopup(`<b>${a.location}</b><br>Risk: ${a.risk} (${a.prob}%)`);
  });
}

// Search filter
document.getElementById("searchInput").addEventListener("input", function() {
  const query = this.value.toLowerCase();
  const filtered = allAlerts.filter(a => a.location.toLowerCase().includes(query));
  renderAlerts(filtered);
});

// Chart.js rainfall chart
const ctx = document.getElementById("rainChart").getContext("2d");
new Chart(ctx, {
  type: "line",
  data: {
    labels: ["Day 1","Day 2","Day 3","Day 4","Day 5","Day 6","Day 7"],
    datasets: [{
      label: "Rainfall (mm)",
      data: [10, 20, 35, 60, 80, 50, 30],
      borderColor: "#004aad",
      backgroundColor: "rgba(0,74,173,0.2)",
      fill: true,
      tension: 0.3
    }]
  }
});
